#!/bin/bash 

# Configure script for R package generation
#
#
#

err=0

# check submodules just in case
git submodule update --init --recursive 2>&1 >/dev/null || true

### check dependencies

#set pkgconfig path including possible installation dir
arr=(`Rscript -e '.libPaths()' | gawk '{printf "%s ",$2}'`)
for i in ${!arr[*]};
do
    dir=`echo ${arr[$i]}|tr -d \"`
    if [ -d "$dir" ] && [ -w "$dir" ]
    then
        SETUP_DIR="$dir/exageostat"
        break
    fi
done
export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:$SETUP_DIR/lib/pkgconfig

# StarPU
if pkg-config --exists --atleast-version=1.2 libstarpu
then
    _LOCATION=`pkg-config --variable=prefix libstarpu`
    echo "StarPU FOUND in [$_LOCATION]"
else
    echo "####################"
    echo "StarPU NOT FOUND"
    echo "Please download it from: http://starpu.gforge.inria.fr/files/"
    echo "After installing it, set the proper PKG_CONFIG_PATH variable"
    echo ""
    err=1
fi

# CHAMELEON
if pkg-config --exists chameleon
then
    _LOCATION=`pkg-config --variable=prefix chameleon`
    echo "CHAMELEON FOUND in [$_LOCATION]"
else
    echo "####################"
    echo "CHAMELEON NOT FOUND"
    echo "Please download it from: https://gitlab.inria.fr/solverstack/chameleon.git"
    echo "After installing it, set the proper PKG_CONFIG_PATH variable"
    echo ""
    err=1
fi

# gsl
if pkg-config --exists --atleast-version=2 gsl
then
    _LOCATION=`pkg-config --variable=prefix gsl`
    echo "gsl FOUND in [$_LOCATION]"
else
    echo "####################"
    echo "gsl NOT FOUND"
    echo "Please download it from: https://ftp.gnu.org/gnu/gsl/gsl-2.4.tar.gz"
    echo "After installing it, set the proper PKG_CONFIG_PATH variable"
    echo ""
    err=1
fi

# nlopt
if pkg-config --exists --atleast-version=2.4 nlopt
then
    _LOCATION=`pkg-config --variable=prefix nlopt`
    echo "nlopt FOUND in [$_LOCATION]"
else
    echo "####################"
    echo "nlopt NOT FOUND"
    echo "Please download it from: http://ab-initio.mit.edu/nlopt/nlopt-2.4.2.tar.gz"
    echo "After installing it, set the proper PKG_CONFIG_PATH variable"
    echo ""
    err=1
fi

# hwloc
if pkg-config --exists --atleast-version=1.11 hwloc
then
    _LOCATION=`pkg-config --variable=prefix hwloc`
    echo "hwloc FOUND in [$_LOCATION]"
else
    echo "####################"
    echo "hwloc NOT FOUND"
    echo "Please download it from: https://www.open-mpi.org/software/hwloc/v1.11/downloads/hwloc-1.11.5.tar.gz"
    echo "After installing it, set the proper PKG_CONFIG_PATH variable"
    echo ""
    err=1
fi


# hicma
if pkg-config --exists --atleast-version=0.1.1 hicma
then
    _LOCATION=`pkg-config --variable=prefix hicma`
    echo "hicma FOUND in [$_LOCATION]"
else
    echo "####################"
    echo "hicma NOT FOUND"
    echo "Please download it from: https://github.com/ecrc/hicma"
    echo "After installing it, set the proper PKG_CONFIG_PATH variable"
    echo ""
    err=1
fi

# starsh
if pkg-config --exists --atleast-version=0.1.1 starsh
then
    _LOCATION=`pkg-config --variable=prefix starsh`
    echo "starsh FOUND in [$_LOCATION]"
else
    echo "####################"
    echo "starsh NOT FOUND"
    echo "Please download it from: https://github.com/ecrc/stars-h"
    echo "After installing it, set the proper PKG_CONFIG_PATH variable"
    echo ""
    err=1
fi

if [ $err -gt 0 ]
then
echo "##### Building dependencies...."
sleep 5
exec ./build_deps.sh $SETUP_DIR
fi
#EOF
